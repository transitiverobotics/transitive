version: "3.9"

# An "extension": cloud service definition shared between dev and prod
x-cloud: &shared_cloud
  container_name: cloud
  image: transitiverobotics/cloud:latest
  tty: true # to get colored logging output
  restart: always
  depends_on:
    mongodb:
      condition: service_started
    ensure_certs:
      condition: service_completed_successfully
  env_file:
    - .env
  ports:
    - 9000:9000
  networks:
    - default
    - caps
    - shared
  logging:
    driver: local


networks:
  caps:
    attachable: true
  shared:
    attachable: true

services:
  # a minimal container that ensures certificates are present in the shared,
  # mounted volume
  ensure_certs:
    image: transitiverobotics/ensure_certs:latest
    build: ./certs
    volumes:
      - ${TR_VAR_DIR:-.}/certs:/generated

  # MongoDB with replset, required to watch for changes
  mongodb:
    build: ./mongo
    image: transitiverobotics/mongo:latest
    restart: always
    command: --replSet rs0
    extra_hosts:
      - mongodb:127.0.0.1 # required for init script to set up replset
    volumes:
      - ${TR_VAR_DIR:-.}/db:/data/db
    networks:
      - default
      - caps # TODO: This means we'll need to enable authentication on the DB
      - shared
    logging:
      driver: local

  mosquitto:
    build: ./mosquitto
    image: transitiverobotics/mosquitto:latest
    restart: always
    depends_on:
      ensure_certs:
        condition: service_completed_successfully
    volumes:
      - ${TR_VAR_DIR:-.}/certs:/mosquitto/certs
      - ${TR_VAR_DIR:-.}/mqtt_persistence:/persistence
    ports:
      - 8883:8883
      - 9001:9001
    networks:
      - default
      - caps
    logging:
      driver: local

  cloud_prod:
    <<: *shared_cloud
    profiles:
      - prod
    build:
      context: ./app
      args:
        - TR_HOST=${TR_HOST:-localhost}
      target: prod
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /run/user/0:/run/user/0
      - ${TR_VAR_DIR:-.}/certs:/etc/mosquitto/certs

  cloud_dev:
    <<: *shared_cloud
    profiles:
      - dev
    build:
      context: ./app
      args:
        - TR_HOST=${TR_HOST:-localhost}
      target: dev
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${TR_VAR_DIR:-.}/certs:/etc/mosquitto/certs
      - /run/user/0:/run/user/0
      - ./app/src:/app/src
      - ./app/web_components:/app/web_components
      - ./app/server:/app/server
      # In dev we allow serving local dev files for capability bundles. This
      # assumes a specific directory layout.
      - /tmp/caps:/app/caps:ro

  proxy:
    build: ./proxy
    image: transitiverobotics/proxy:latest
    restart: always
    volumes:
      - ${TR_VAR_DIR:-.}/greenlock.d:/app/greenlock.d
    env_file:
      - .env
    ports:
      - 80:80
      - 443:443
    networks:
      - default
      - shared
    logging:
      driver: local

  registry:
    build: ./registry
    image: transitiverobotics/registry:latest
    restart: always
    depends_on:
      - mongodb
    env_file:
      - .env
    ports:
      - 6000:6000
    networks:
      - default
      - shared
    logging:
      driver: local

  # Once the registry is up, republish the robot-agent to it, in case it changed
  publish:
    build: ../robot-agent
    image: transitiverobotics/publish_agent:latest
    depends_on:
      - registry
    env_file:
      - .env

  # In Dev: run a small mDNS service to allow local testing with subdomains
  mdns:
    build: ./tools/mDNS
    image: transitiverobotics/mdns:latest
    restart: always
    env_file:
      - .env
    network_mode: host
    logging:
      driver: local
    profiles:
      - dev
